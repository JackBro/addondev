package org.mozilla.interfaces;

public interface nsIBase extends nsIDOMXULElement, nsIDOMNSElement, nsIDOM3Node {

}

http://jsonic.sourceforge.jp/

//const Cc = Components.classes;
//const Ci = Components.interfaces;

(function(){
	
var $ = stacklink_106ec9de_7db3_40c6_93c2_39563e25a8d6;
//var $_ = 'stacklink_106ec9de_7db3_40c6_93c2_39563e25a8d6';

$.MyObject =
//var MyObject = 
{
	message3: null,  
	hello3: function (arg0, arg1){
		//arg0=100;
		this.h= "10";
		
	}
	,
	tt: function()
	{
		try
		{
			this.h1= "10";
		}
		catch(ex)
		{
			Components.utils.reportError("unload save error : " + ex);
		}
	}
	,
	unload: function()
	{
		this.h2= "10";
	}
}

var t = $.MyObject;
t.

})();

https://developer.mozilla.org/ja/Developer_Guide/Build_Instructions/Windows_Build_Prerequisites
https://developer.mozilla.org/En/Windows_SDK_versions

Visual C++ 8 (VS2005) Express
Windows Vista SDK

/////////////
rem list.bat D:\data\src\PDE\xulrunner\xulrunner-sdk\idl > res.txt
@echo off
cd %1
rem echo start
for /r %1 %%i in (*) do (
rem echo %%~ni.idl
    D:\data\src\PDE\xpcom\xpidl.exe -m java %%~ni.idl
)
rem echo end
//////////////

http://www.microsoft.com/downloads/details.aspx?FamilyID=7b0b0339-613a-46e6-ab4d-080d4d4a8c4e&DisplayLang=ja#filelist
http://sonic64.com/2005-12-16.html
http://74.125.153.132/search?q=cache:GaVv--_9h78J:v13.wonderrabbitproject.net/%3FTips%252FSoftware%252FMozilla%252FFirefox%E3%81%AEWindows%E7%89%88%E3%82%92%E7%8B%AC%E8%87%AA%E3%83%93%E3%83%AB%E3%83%89%E3%81%99%E3%82%8B%E3%81%AB%E3%81%AF+firefox%E3%80%80build+Visual+C%2B%2B+2008&cd=29&hl=ja&ct=clnk&gl=jp&client=firefox-a
http://nomina.petit-archives.mydns.jp/doc/geckobuild.html#todo_vc8e

https://developer.mozilla.org/User:Andywang/xpidl

http://d.hatena.ne.jp/hhelibex/20100125/1264437921
http://simple.sourceforge.net/home.php

"C:\Program Files\Java\jdk1.6.0_16\bin\javadoc"  -doclet MyDoclet -classpath "C:\Program Files\Java\jdk1.6.0_16\lib\tools.jar"  MyClass.java
"C:\Program Files\Java\jdk1.6.0_16\bin\javac" -classpath "C:\Program Files\Java\jdk1.6.0_16\lib\tools.jar" MyDoclet.java

http://d.hatena.ne.jp/torutk/20061112/p2
http://www.devx.com/Java/Article/38719/1954
http://relation.to/Bloggers/TestingJavaDoclets?showCommentForm=true
http://d.hatena.ne.jp/a-san/?of=10


package org.jsjava;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.lang.reflect.Modifier;

public class JsJava {

	/**
	 * @param args
	 * @throws ClassNotFoundException 
	 */
	public static void main(String[] args) throws ClassNotFoundException {
		// TODO Auto-generated method stub
		Class cls = Class.forName("org.mozilla.interfaces.nsIIOService");
	      // メソッドの分析
	      Method[] methList = cls.getMethods();
	      for (int i=0;i<methList.length;i++) {
	        Method m = methList[i];
	        // 修飾子を表示
	        System.out.print(Modifier.toString(m.getModifiers()));
	        // 戻り値の型を表示
	        System.out.print(" " + m.getReturnType().getName());
	        // メソッド名を表示
	        System.out.print(" " + m.getName());
	        // 引数の型を表示
	        Class[] mparamList = m.getParameterTypes();
	        System.out.print("(");
	        for (int j=0;j<mparamList.length;j++) {
	          System.out.print(" " + mparamList[j].getName());
	        }
	        System.out.println(");");
	      }
	      System.exit(0);
	}

}


java -jar js.jar  test.js

*** src/org/mozilla/javascript/Node.java	Sun Mar 22 14:32:24 2009
--- src/org/mozilla/javascript/Node.java	Tue Jan 19 03:10:37 2010
***************
*** 1115,1121 ****
            case Token.INC:
            case Token.DEC:
            case Token.EXPORT:
!           case Token.IMPORT:
            case Token.IF:
            case Token.ELSE:
            case Token.SWITCH:
--- 1115,1121 ----
            case Token.INC:
            case Token.DEC:
            case Token.EXPORT:
!           //case Token.IMPORT:
            case Token.IF:
            case Token.ELSE:
            case Token.SWITCH:
*** src/org/mozilla/javascript/Parser.java	Sun Mar 22 14:32:24 2009
--- src/org/mozilla/javascript/Parser.java	Tue Jan 19 03:31:18 2010
***************
*** 379,385 ****
           * we've collected all the source */
          Node pn = nf.createLeaf(Token.BLOCK);
  
!         try {
              for (;;) {
                  int tt = peekToken();
  
--- 379,385 ----
           * we've collected all the source */
          Node pn = nf.createLeaf(Token.BLOCK);
  
!         //try {
              for (;;) {
                  int tt = peekToken();
  
***************
*** 390,420 ****
                  Node n;
                  if (tt == Token.FUNCTION) {
                      consumeToken();
!                     try {
                          n = function(calledByCompileFunction
                                       ? FunctionNode.FUNCTION_EXPRESSION
                                       : FunctionNode.FUNCTION_STATEMENT);
!                     } catch (ParserException e) {
!                         break;
!                     }
                  } else {
                      n = statement();
                  }
                  nf.addChildToBack(pn, n);
              }
!         } catch (StackOverflowError ex) {
!             String msg = ScriptRuntime.getMessage0(
!                 "msg.too.deep.parser.recursion");
!             throw Context.reportRuntimeError(msg, sourceURI,
!                                              ts.getLineno(), null, 0);
!         }
  
!         if (this.syntaxErrorCount != 0) {
!             String msg = String.valueOf(this.syntaxErrorCount);
!             msg = ScriptRuntime.getMessage1("msg.got.syntax.errors", msg);
!             throw errorReporter.runtimeError(msg, sourceURI, baseLineno,
!                                              null, 0);
!         }
  
          currentScriptOrFn.setSourceName(sourceURI);
          currentScriptOrFn.setBaseLineno(baseLineno);
--- 390,420 ----
                  Node n;
                  if (tt == Token.FUNCTION) {
                      consumeToken();
!                     //try {
                          n = function(calledByCompileFunction
                                       ? FunctionNode.FUNCTION_EXPRESSION
                                       : FunctionNode.FUNCTION_STATEMENT);
! //                    } catch (ParserException e) {
! //                        break;
! //                    }
                  } else {
                      n = statement();
                  }
                  nf.addChildToBack(pn, n);
              }
! //        } catch (StackOverflowError ex) {
! //            String msg = ScriptRuntime.getMessage0(
! //                "msg.too.deep.parser.recursion");
! //            throw Context.reportRuntimeError(msg, sourceURI,
! //                                             ts.getLineno(), null, 0);
! //        }
  
! //        if (this.syntaxErrorCount != 0) {
! //            String msg = String.valueOf(this.syntaxErrorCount);
! //            msg = ScriptRuntime.getMessage1("msg.got.syntax.errors", msg);
! //            throw errorReporter.runtimeError(msg, sourceURI, baseLineno,
! //                                             null, 0);
! //        }
  
          currentScriptOrFn.setSourceName(sourceURI);
          currentScriptOrFn.setBaseLineno(baseLineno);
*** src/org/mozilla/javascript/Token.java	Sun Mar 22 14:32:26 2009
--- src/org/mozilla/javascript/Token.java	Tue Jan 19 02:59:27 2010
***************
*** 58,64 ****
  {
  
      // debug flags
!     public static final boolean printTrees = false;
      static final boolean printICode = false;
      static final boolean printNames = printTrees || printICode;
  
--- 58,64 ----
  {
  
      // debug flags
!     public static final boolean printTrees = true;
      static final boolean printICode = false;
      static final boolean printNames = printTrees || printICode;
  
***************
*** 376,382 ****
            case DOT:             return "DOT";
            case FUNCTION:        return "FUNCTION";
            case EXPORT:          return "EXPORT";
!           case IMPORT:          return "IMPORT";
            case IF:              return "IF";
            case ELSE:            return "ELSE";
            case SWITCH:          return "SWITCH";
--- 376,382 ----
            case DOT:             return "DOT";
            case FUNCTION:        return "FUNCTION";
            case EXPORT:          return "EXPORT";
!           //case IMPORT:          return "IMPORT";
            case IF:              return "IF";
            case ELSE:            return "ELSE";
            case SWITCH:          return "SWITCH";
***************
*** 425,431 ****
            case ARRAYCOMP:       return "ARRAYCOMP";
            case WITHEXPR:        return "WITHEXPR";
            case LETEXPR:         return "LETEXPR";
!           case DEBUGGER:        return "DEBUGGER";
          }
  
          // Token without name
--- 425,431 ----
            case ARRAYCOMP:       return "ARRAYCOMP";
            case WITHEXPR:        return "WITHEXPR";
            case LETEXPR:         return "LETEXPR";
!           //case DEBUGGER:        return "DEBUGGER";
          }
  
          // Token without name
*** src/org/mozilla/javascript/TokenStream.java	Sun Mar 22 14:32:26 2009
--- src/org/mozilla/javascript/TokenStream.java	Sun Jan 17 06:30:27 2010
***************
*** 155,161 ****
              Id_char          = Token.RESERVED,
              Id_class         = Token.RESERVED,
              Id_const         = Token.CONST,
!             Id_debugger      = Token.DEBUGGER,
              Id_double        = Token.RESERVED,
              Id_enum          = Token.RESERVED,
              Id_extends       = Token.RESERVED,
--- 155,161 ----
              Id_char          = Token.RESERVED,
              Id_class         = Token.RESERVED,
              Id_const         = Token.CONST,
!             //Id_debugger      = Token.DEBUGGER,
              Id_double        = Token.RESERVED,
              Id_enum          = Token.RESERVED,
              Id_extends       = Token.RESERVED,
***************
*** 164,170 ****
              Id_float         = Token.RESERVED,
              Id_goto          = Token.RESERVED,
              Id_implements    = Token.RESERVED,
!             Id_import        = Token.IMPORT,
              Id_instanceof    = Token.INSTANCEOF,
              Id_int           = Token.RESERVED,
              Id_interface     = Token.RESERVED,
--- 164,170 ----
              Id_float         = Token.RESERVED,
              Id_goto          = Token.RESERVED,
              Id_implements    = Token.RESERVED,
!             //Id_import        = Token.IMPORT,
              Id_instanceof    = Token.INSTANCEOF,
              Id_int           = Token.RESERVED,
              Id_interface     = Token.RESERVED,
***************
*** 249,255 ****
                      else if (c=='r') { X="return";id=Id_return; }
                      break L;
                  case 'h': X="throws";id=Id_throws; break L;
!                 case 'm': X="import";id=Id_import; break L;
                  case 'o': X="double";id=Id_double; break L;
                  case 't': X="static";id=Id_static; break L;
                  case 'u': X="public";id=Id_public; break L;
--- 249,255 ----
                      else if (c=='r') { X="return";id=Id_return; }
                      break L;
                  case 'h': X="throws";id=Id_throws; break L;
!                 //case 'm': X="import";id=Id_import; break L;
                  case 'o': X="double";id=Id_double; break L;
                  case 't': X="static";id=Id_static; break L;
                  case 'u': X="public";id=Id_public; break L;
***************
*** 268,274 ****
              case 8: switch (s.charAt(0)) {
                  case 'a': X="abstract";id=Id_abstract; break L;
                  case 'c': X="continue";id=Id_continue; break L;
!                 case 'd': X="debugger";id=Id_debugger; break L;
                  case 'f': X="function";id=Id_function; break L;
                  case 'v': X="volatile";id=Id_volatile; break L;
                  } break L;
--- 268,274 ----
              case 8: switch (s.charAt(0)) {
                  case 'a': X="abstract";id=Id_abstract; break L;
                  case 'c': X="continue";id=Id_continue; break L;
!                 //case 'd': X="debugger";id=Id_debugger; break L;
                  case 'f': X="function";id=Id_function; break L;
                  case 'v': X="volatile";id=Id_volatile; break L;
                  } break L;
